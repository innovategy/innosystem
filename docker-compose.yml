version: '3.8'

services:
  # Database service
  postgres:
    image: postgres:15
    restart: unless-stopped
    container_name: innosystem-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=innosystem
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - innosystem-network

  # Redis service
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    container_name: innosystem-redis
    ports:
      - "6379:6379"
    networks:
      - innosystem-network

  # API service
  api:
    build:
      context: ./
      dockerfile: core/api/Dockerfile
    restart: unless-stopped
    container_name: innosystem-api
    depends_on:
      - postgres
      - redis
    environment:
      - RUST_LOG=debug
      - PORT=8080
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/innosystem
      - REDIS_URL=redis://redis:6379
    ports:
      - "8080:8080"
    networks:
      - innosystem-network

  # Runner service
  runner:
    build:
      context: ./
      dockerfile: core/runner/Dockerfile
    restart: unless-stopped
    container_name: innosystem-runner
    depends_on:
      - postgres
      - redis
    environment:
      - RUST_LOG=debug
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/innosystem
      - REDIS_URL=redis://redis:6379
    networks:
      - innosystem-network
      
  # Migrations service
  migrations:
    build:
      context: ./
      dockerfile: core/migrations/Dockerfile
    container_name: innosystem-migrations
    depends_on:
      - postgres
    environment:
      - RUST_LOG=debug
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/innosystem
    networks:
      - innosystem-network
      
  # Tester service
  tester:
    build:
      context: ./
      dockerfile: core/tester/Dockerfile
    container_name: innosystem-tester
    depends_on:
      - api
      - postgres
    environment:
      - RUST_LOG=debug
    volumes:
      - ./logs:/app/logs
    networks:
      - innosystem-network
      
  # pgAdmin service
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: innosystem-pgadmin
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - innosystem-network

networks:
  innosystem-network:
    name: innosystem-network

volumes:
  postgres-data:
    name: innosystem-postgres-data
  pgadmin-data:
    name: innosystem-pgadmin-data
